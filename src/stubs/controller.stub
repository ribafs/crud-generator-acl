<?php
namespace DummyNamespace;

use DummyRootNamespaceHttp\Requests;
use DummyRootNamespaceHttp\Controllers\Controller;

use DummyRootNamespace{{modelNamespace}}{{modelName}};
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class DummyClass extends Controller
{
    public function index(Request $request)
    {
        $auth = Auth::user()->hasRole('super', 'manager', 'user');
        if((!$auth)){
            return view('home');
        }else{
            $keyword = $request->get('search');
            $perPage = {{pagination}};

            if (!empty($keyword)) {
                ${{crudName}} = {{modelName}}::{{whereSnippet}}latest()->paginate($perPage);
            } else {
                ${{crudName}} = {{modelName}}::latest()->orderBy('id')->paginate($perPage);
            }

            return view('{{viewPath}}{{viewName}}.index', compact('{{crudName}}'));
        }
    }

    public function create()
    {
        $auth = Auth::user()->hasRole('super', 'manager');
        if((!$auth)){
            return view('home');
        }else{
            return view('{{viewPath}}{{viewName}}.create');
        }
    }

    public function store(Request $request)
    {
        $auth = Auth::user()->hasRole('super', 'manager', 'user');
        if((!$auth)){
            return view('home');
        }else{
            {{validationRules}}
            $requestData = $request->all();
            {{fileSnippet}}
            {{modelName}}::create($requestData);

            return redirect('{{routeGroup}}{{viewName}}')->with('flash_message', '{{modelName}} added!');
        }
    }

    public function show($id)
    {
        $auth = Auth::user()->hasRole('super', 'manager');
        if((!$auth)){
            return view('home');
        }else{
            ${{crudNameSingular}} = {{modelName}}::findOrFail($id);

            return view('{{viewPath}}{{viewName}}.show', compact('{{crudNameSingular}}'));
        }
    }

    public function edit($id)
    {
        $auth = Auth::user()->hasRole('super', 'manager');
        if((!$auth)){
            return view('home');
        }else{
            ${{crudNameSingular}} = {{modelName}}::findOrFail($id);

            return view('{{viewPath}}{{viewName}}.edit', compact('{{crudNameSingular}}'));
        }
    }

    public function update(Request $request, $id)
    {
        $auth = Auth::user()->hasRole('super', 'manager');
        if((!$auth)){
            return view('home');
        }else{
            {{validationRules}}
            $requestData = $request->all();
            {{fileSnippet}}
            ${{crudNameSingular}} = {{modelName}}::findOrFail($id);
            ${{crudNameSingular}}->update($requestData);

            return redirect('{{routeGroup}}{{viewName}}')->with('flash_message', '{{modelName}} updated!');
        }
    }

    public function destroy($id)
    {
        $auth = Auth::user()->hasRole('super', 'manager');
        if((!$auth)){
            return view('home');
        }else{
            {{modelName}}::destroy($id);

            return redirect('{{routeGroup}}{{viewName}}')->with('flash_message', '{{modelName}} deleted!');
        }
    }
}
